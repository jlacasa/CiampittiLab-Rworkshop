geom_point(aes(color = County), shape =13, alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = County), shape =25, alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = County), shape = 21, alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
remove(County)
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value), shape = 21, alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value), alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value),color = "black", alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value), alpha = 0.1,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value), alpha = 0.6, size = 5,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value, size = Value), alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value, size = County), alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
filter(State=="IOWA") %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = Value), alpha = 0.6,
# everything inside aes() is mapped
# and is used to differenciate btw groups
show.legend = FALSE)+
geom_smooth(color="black")
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(group = State)) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(group = State)) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes()) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(group = State)) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(group = State), color = State) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(color = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(group = State,
color = State)) #same for geom_line
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_x_continuous(limits = c(2010, 2021))+
scale_y_continuous(limits = c(0, 300))+
theme_classic()
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
scale_x_continuous(limits = c(2010, 2021))+
geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_y_continuous(limits = c(0, 300))+
theme_classic()
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_x_continuous(limits = c(1990, 2021))+
scale_y_continuous(limits = c(0, 300))+
theme_classic()
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_x_continuous(limits = c(1990, 2021))+
scale_y_continuous(limits = c(0, 300))+
scale_color_brewer(palette = "C")
scale_fill_brewer(palette = "C")
#data
usda %>%
ggplot(aes(Year, Value))+
# layers
geom_point(aes(fill = State),
shape = 21, alpha = 0.6,
show.legend = FALSE)+
geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_x_continuous(limits = c(1990, 2021))+
scale_y_continuous(limits = c(0, 300))+
scale_color_brewer(palette = "C")+
scale_fill_brewer(palette = "C")
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_grid(~State)
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_wrap(~State)
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_grid(Year~State)
lotus %>%
ggplot(aes(rsum, pac))+
geom_point()+
labs(x = "biomasa raices",
y = "biomasa aerea")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
facet_wrap(~trat)
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
scale_shape_manual(values = c(21, 25))
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
scale_shape_manual(values = c(21, 15))
```{r usda}
usda
usda
usda %>% group_by(.data = Year)
usda %>% group_by(Year)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
library(tidyverse)
lotus <- read.csv("../data/lotus.csv") %>%
dplyr::select(planta, trat, doy, starts_with("tallo_"))
#pivot_longer
lotus %>% pivot_longer(-c(planta, trat, doy))
lotus
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"))
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr")
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm") %>%
drop_na()
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm") %>%
drop_na(length_cm)
lotus
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
lotus
lotus_compl <- read.csv("../data/lotus.csv")
lotus_compl
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"))
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
value_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm") %>%
dplyr::select(-name)
lotus_compl <- lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm") %>%
dplyr::select(-name)
lotus_compl
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy)) %>%
ggplot(aes(value))+
geom_histogram()+
facet_wrap(~name, scales ='free')
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy))
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy)) %>%
ggplot(aes(value))+
geom_histogram()+
facet_wrap(~name, scales ='free')
# lotus example
lotus
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo") %>%
drop_na(length_cm)
lotus <- read.csv("../data/lotus.csv") %>%
dplyr::select(planta, trat, doy, starts_with("tallo_"))
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo") %>%
drop_na(length_cm)
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo")
# lotus example
lotus2
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "rep",
values_to = "length_cm")
# lotus example
lotus2
# lotus example
lotus2 %>%
drop_na()
# lotus example
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep") sep="_")
# lotus example
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep"), sep="_")
lotus2 %>%
drop_na()
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep"), sep="_")
# coords ex
# coords example
read.csv("../data/coords.csv")
# coords example
read.csv("../data/coords.csv") %>%
separate(coord, c("x","y"), sep = "/")
fao <- read.csv("../data/FAOSTAT_data_9-15-2021.csv")
fao
fao_weather <- read.csv("../data/wb_weather.csv")
fao_weather
fao_weather
fao
#which countries do I have in fao
fao$Area %>% unique()
fao_weather <- read.csv("../data/wb_weather.csv") %>%
mutate(area = c("Argentina", "Uruguay", "Brazil", "Honduras"))
fao_weather
fao_weather <- read.csv("../data/wb_weather.csv") %>%
mutate(Area = c("Argentina", "Uruguay", "Brazil", "Honduras"))
fao
fao <- read.csv("../data/FAOSTAT_data_9-15-2021.csv") %>%
dplyr::select(Area, crop = Item, yield = Value)
fao
fao_weather
print("fao",colnames(fao),
"fao_weather", colnames(fao_weather), sep=", ")
colnames(fao);colnames(fao_weather)
#which countries do I have in fao
fao$Area %>% unique()
fao_weather
# left_join
fao_weather %>%
left_join(fao, by="Area")
fao %>%
group_by(Area, crop) %>%
summarise(yield_avg = mean(yield))
fao <- fao %>%
group_by(Area, crop) %>%
summarise(yield_avg = mean(yield))
# left_join
fao_weather %>%
left_join(fao, by="Area")
# left_join
fao_weather %>% dplyr::select(-country)
# left_join
fao_weather %>% dplyr::select(-country) %>%
left_join(fao, by="Area")
fao
fao %>%
left_join(fao_weather, by="Area")
fao_weather
fao_weather %>%
dplyr::select(-country) %>%
left_join(fao, by="Area")
fao %>% filter(crop=="Soybeans")
# left_join
fao_weather %>%
dplyr::select(-country) %>%
left_join(fao %>% filter(crop=="Soybeans"), by="Area")
# left_join
soybean <- fao %>% filter(crop=="Soybeans")
fao_weather %>%
dplyr::select(-country) %>%
left_join(soybean, by="Area")
soybean
fao
fao_weather
fao_weather %>%
dplyr::select(-country) %>%
left_join(soybean, by="Area")
fao
fao %>%
left_join(fao_weather, by="Area")
knitr::opts_chunk$set(echo = TRUE)
my_convert <- function(kg.ha) {
kg_ha/67.19
}
my_convert(1000)
kg.ha/67.19
my_convert <- function(kg.ha) {
kg.ha/67.19
}
my_convert(1000)
library(XPolaris)
install.packages("XPolaris")
library(XPolaris)
knitr::opts_chunk$set(echo = TRUE)
library(XPolaris)
exkansas
nacho <- data.frame(ID = c("Ashland", "Topeka"),
lat =c(39.08, 39.077),
long = c(96.37, 95.768))
nacho
xplot(nacho, localPath = getwd())
getwd()
xplot(nacho, localPath = getwd())
nacho <- data.frame(ID = c("Ashland", "Topeka"),
lat =c(39.08, 39.077),
long = c(- 96.37, - 95.768))
xplot(nacho, localPath = getwd())
ximages(nacho)
xsoil(nacho2, getwd())
nacho2 <- ximages(nacho,
variables = c("om", "clay"),
statistics = c("mean"),
layersdepths = c("0_5"),
localPath = getwd()) #
xsoil(nacho2, getwd())
