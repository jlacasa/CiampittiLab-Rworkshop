geom_smooth(aes(color = State,
group = State)) + #same for geom_line
scale_x_continuous(limits = c(1990, 2021))+
scale_y_continuous(limits = c(0, 300))+
scale_color_brewer(palette = "C")+
scale_fill_brewer(palette = "C")
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_grid(~State)
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_wrap(~State)
usda %>%
filter(Year %in% c(2010:2013)) %>%
ggplot(aes(Value))+
geom_histogram()+
facet_grid(Year~State)
lotus %>%
ggplot(aes(rsum, pac))+
geom_point()+
labs(x = "biomasa raices",
y = "biomasa aerea")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
facet_wrap(~trat)
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
scale_shape_manual(values = c(21, 25))
lotus %>%
ggplot(aes(rsum, pac))+
geom_point(aes(shape = trat, color = planta))+
labs(x = "biomasa raices",
y = "biomasa aerea",
color = "Genotipo")+
scale_shape_manual(values = c(21, 15))
```{r usda}
usda
usda
usda %>% group_by(.data = Year)
usda %>% group_by(Year)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
library(tidyverse)
lotus <- read.csv("../data/lotus.csv") %>%
dplyr::select(planta, trat, doy, starts_with("tallo_"))
#pivot_longer
lotus %>% pivot_longer(-c(planta, trat, doy))
lotus
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"))
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr")
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm") %>%
drop_na()
#pivot_longer
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm") %>%
drop_na(length_cm)
lotus
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
lotus
lotus_compl <- read.csv("../data/lotus.csv")
lotus_compl
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"))
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "length_cm")
lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
value_to = "tallo")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm")
lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm") %>%
dplyr::select(-name)
lotus_compl <- lotus_compl %>%
pivot_longer(cols = starts_with("tallo_"),
values_to = "tallo_cm") %>%
dplyr::select(-name)
lotus_compl
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy)) %>%
ggplot(aes(value))+
geom_histogram()+
facet_wrap(~name, scales ='free')
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy))
lotus_compl %>%
pivot_longer(cols = -c(planta, trat, doy)) %>%
ggplot(aes(value))+
geom_histogram()+
facet_wrap(~name, scales ='free')
# lotus example
lotus
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo") %>%
drop_na(length_cm)
lotus <- read.csv("../data/lotus.csv") %>%
dplyr::select(planta, trat, doy, starts_with("tallo_"))
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo") %>%
drop_na(length_cm)
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "nr",
values_to = "tallo")
# lotus example
lotus2
#pivot_longer
lotus2 <- lotus %>%
pivot_longer(cols = contains("tallo"),
names_to = "rep",
values_to = "length_cm")
# lotus example
lotus2
# lotus example
lotus2 %>%
drop_na()
# lotus example
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep") sep="_")
# lotus example
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep"), sep="_")
lotus2 %>%
drop_na()
lotus2 %>%
drop_na() %>%
separate(rep,c("trait", "rep"), sep="_")
# coords ex
# coords example
read.csv("../data/coords.csv")
# coords example
read.csv("../data/coords.csv") %>%
separate(coord, c("x","y"), sep = "/")
fao <- read.csv("../data/FAOSTAT_data_9-15-2021.csv")
fao
fao_weather <- read.csv("../data/wb_weather.csv")
fao_weather
fao_weather
fao
#which countries do I have in fao
fao$Area %>% unique()
fao_weather <- read.csv("../data/wb_weather.csv") %>%
mutate(area = c("Argentina", "Uruguay", "Brazil", "Honduras"))
fao_weather
fao_weather <- read.csv("../data/wb_weather.csv") %>%
mutate(Area = c("Argentina", "Uruguay", "Brazil", "Honduras"))
fao
fao <- read.csv("../data/FAOSTAT_data_9-15-2021.csv") %>%
dplyr::select(Area, crop = Item, yield = Value)
fao
fao_weather
print("fao",colnames(fao),
"fao_weather", colnames(fao_weather), sep=", ")
colnames(fao);colnames(fao_weather)
#which countries do I have in fao
fao$Area %>% unique()
fao_weather
# left_join
fao_weather %>%
left_join(fao, by="Area")
fao %>%
group_by(Area, crop) %>%
summarise(yield_avg = mean(yield))
fao <- fao %>%
group_by(Area, crop) %>%
summarise(yield_avg = mean(yield))
# left_join
fao_weather %>%
left_join(fao, by="Area")
# left_join
fao_weather %>% dplyr::select(-country)
# left_join
fao_weather %>% dplyr::select(-country) %>%
left_join(fao, by="Area")
fao
fao %>%
left_join(fao_weather, by="Area")
fao_weather
fao_weather %>%
dplyr::select(-country) %>%
left_join(fao, by="Area")
fao %>% filter(crop=="Soybeans")
# left_join
fao_weather %>%
dplyr::select(-country) %>%
left_join(fao %>% filter(crop=="Soybeans"), by="Area")
# left_join
soybean <- fao %>% filter(crop=="Soybeans")
fao_weather %>%
dplyr::select(-country) %>%
left_join(soybean, by="Area")
soybean
fao
fao_weather
fao_weather %>%
dplyr::select(-country) %>%
left_join(soybean, by="Area")
fao
fao %>%
left_join(fao_weather, by="Area")
knitr::opts_chunk$set(echo = TRUE)
my_convert <- function(kg.ha) {
kg_ha/67.19
}
my_convert(1000)
kg.ha/67.19
my_convert <- function(kg.ha) {
kg.ha/67.19
}
my_convert(1000)
library(XPolaris)
install.packages("XPolaris")
library(XPolaris)
knitr::opts_chunk$set(echo = TRUE)
library(XPolaris)
exkansas
nacho <- data.frame(ID = c("Ashland", "Topeka"),
lat =c(39.08, 39.077),
long = c(96.37, 95.768))
nacho
xplot(nacho, localPath = getwd())
getwd()
xplot(nacho, localPath = getwd())
nacho <- data.frame(ID = c("Ashland", "Topeka"),
lat =c(39.08, 39.077),
long = c(- 96.37, - 95.768))
xplot(nacho, localPath = getwd())
ximages(nacho)
xsoil(nacho2, getwd())
nacho2 <- ximages(nacho,
variables = c("om", "clay"),
statistics = c("mean"),
layersdepths = c("0_5"),
localPath = getwd()) #
xsoil(nacho2, getwd())
library(tidyverse)
library(lme4) # mixed models
library(car) # Anova
library(broom) # model diagnostics
library(emmeans) # Anova means
library(multcomp) # pairwise comparisons
library(multcompView) # you will need this for some tasks in multcomp
library(wiqid)
knitr::opts_chunk$set(echo = TRUE)
quadratic <- function(x, a, b, c){
mu <- a + b*x + c*x^2
epsilon <- rnorm(length(x),0, sd = .1)
y <- mu + epsilon
return(y)
}
quadratic(5, 2,2,2)
x <- seq(0,14, length.out = 100) #plants m2
y <- quadratic(x, 4, .5, -.026) # yield
my_data <- data.frame(x,y)
my_data %>%
ggplot(aes(x,y))+
geom_point()+
theme_bw()+
theme(aspect.ratio = .85)
# lm function
my_lm1 <- lm(y ~ x, data = my_data)
my_lm1
my_lm1_wointercept <- lm(y ~ x -1, data = my_data)
my_lm1_wointercept
my_lm2 <- lm(y ~ 1 + x + I(x^2), data = my_data)
Anova(my_lm1, my_lm2)
my_lm2
summary(my_lm1)
summary(my_lm2) # 0.6412
my_lm3 <- lm(y ~ 1 + x + I(x^2) + I(x^3), data = my_data)
my_lm3
summary(my_lm3)
my_lm3 <- lm(y ~ 1 + x + I(x^2) + I(x^3), data = my_data)
my_lm2
usda <- read.csv("../data/USDAsurvey_00-18.csv")
usda
usda_linear1 <- lm(Value ~ State, data = usda)
usda_linear1
usda_linear1 <- lm(Value ~ State -1 , data = usda)
<-
lm(Value ~ State -1 , data = usda)
lm(Value ~ State, data = usda)
usda_linear1 <- lm(Value ~ State -1, data = usda)
usda_linear1
# H0: all the states have the same mean
# H1: at least one of the states has a different mean
anova(usda_linear1) # default in R
anova(usda_linear1) # default in R
Anova(usda_linear1, type = 3) # car package
# H0: all the states have the same mean
# H1: at least one of the states has a different mean
anova(usda_linear1) # default in R
Anova(usda_linear1, type = 3) # car package
anova(usda_linear1) # default in R
Anova(usda_linear1, type = 3) # car package
usda_linear1_aug <- augment(usda_linear1)
usda_linear1_aug$.std.resid <- resid(usda_linear1, type="pearson", scaled=T)
usda_linear1_aug <- augment(usda_linear1)
usda_linear1_aug <- augment(usda_linear1)
usda_linear1_aug$.std.resid <- resid(usda_linear1, type="pearson", scaled=T)
usda_linear1_aug <- augment(usda_linear1) # broom
usda_linear1_aug$.std.resid <- resid(usda_linear1, type="pearson", scaled=T)
usda_linear1_aug %>%
ggplot(aes(x=.fitted, y=.std.resid))+
geom_hline(yintercept = c(-3,0,3), color="tomato")+
geom_point(aes(color=State))+
geom_smooth()
usda_linear1_aug %>%
ggplot(aes(sample=.std.resid))+
stat_qq()+
stat_qq_line()
usda_linear1_means <- emmeans(usda_linear1, specs = ~ State)
Anova(usda_linear1, type = 3) # car package type II / III SS
usda_linear1_means <- emmeans(usda_linear1, specs = ~ State)
usda_linear1_means
class(usda_linear1_means)
usda_linear1_cld <- cld(usda_linear1_means,
adjust = "none",
Letters = letters,
reversed = TRUE,
comparisons = TRUE)
usda_linear1_cld
usda_linear1_cld
usda_linear1_cld
usda_linear1_cld <- usda_linear1_cld %>% as.data.frame()
usda_linear1_cld
usda_linear1_cld %>%
ggplot(aes(State, emmean))+
geom_point()
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()
usda_linear1_cld
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()+
geom_text(aes(label = .group))
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()+
geom_text(aes(), label = "a")
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()+
geom_text(aes(), label = .group)
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()+
geom_text(aes(label = .group))
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_point()+
geom_text(aes(label = .group))+
labs(x = expression(Yield~(bu~acre^{-1})))
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_errorbarh(aes(xmin = lower.CL, xmax = upper.CL), color = "grey70", height = .2)+
geom_point()+
geom_text(aes(label = .group, x = emmean + nchar(.group)*1.1), nudge_y = 0.1)+
labs(x = expression(Mean~Yield~(Bu~acre^{-1})))+
theme_bw()+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# Remove the spaces from the character
usda_linear1_cld$.group <- gsub(" ", "", usda_linear1_cld$.group, fixed = TRUE)
usda_linear1_cld
usda_linear1_cld
usda_linear1_cld %>%
arrange(emmean)
usda_linear1_cld %>%
arrange(emmean) %>%
rownames_to_column("order")
usda_linear1_cld %>%
arrange(emmean) %>%
rownames_to_column("order") %>%
mutate(order = as.numeric(order))
# Create a column "order" with the order of the State factor
usda_linear1_cld <- usda_linear1_cld %>%
arrange(emmean) %>%
rownames_to_column("order") %>%
mutate(order = as.numeric(order))
usda_linear1_cld
levels(usda_linear1_cld$State)
levels(usda_linear1_cld$State)
usda_linear1_cld
usda_linear1_cld
usda_linear1_cld$State
usda_linear1_cld$order
# Reorder the states depending on their means
usda_linear1_cld <- usda_linear1_cld %>%
mutate(State = factor(State, levels = usda_linear1_cld$State[usda_linear1_cld$order]))
levels(usda_linear1_cld$State)
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_errorbarh(aes(xmin = lower.CL, xmax = upper.CL), color = "grey70", height = .2)+
geom_point()+
geom_text(aes(label = .group, x = emmean + nchar(.group)*1.1), nudge_y = 0.1)+
labs(x = expression(Mean~Yield~(Bu~acre^{-1})))+
theme_bw()+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
usda_linear1_cld %>%
ggplot(aes(emmean, State))+
geom_errorbarh(aes(xmin = lower.CL, xmax = upper.CL), color = "grey70", height = .2)+
geom_point()+
geom_text(aes(label = .group, x = emmean + nchar(.group)*1.1), nudge_y = 0.1)+
labs(x = expression(Mean~Yield~(Bu~acre^{-1})))+
theme_bw()+
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) -> usda_linear1_ggplot; usda_linear1_ggplot
class(usda$Year)
class(usda$Year)
class(usda$Year)
usda
lm(Value ~ Year, data = usda)
usda <- usda %>% mutate(fYear = as.factor(Year))
usda
usda_linear1
usda_linear2 <- lm(Value ~ State + Year, data = usda)
usda_linear2
usda_linear2 <- lm(Value ~ State + Year -1, data = usda)
usda_linear2
usda_linear3 <- lm(Value ~ State + fYear -1, data = usda)
usda_linear3 <- lm(Value ~ State + fYear -1, data = usda)
usda_linear3
usda_linear4 <- lm(Value ~ State * Year -1, data = usda)
usda_linear4
usda_linear5 <- lm(Value ~ State * fYear -1, data = usda)
usda_linear5
AICtable(AIC(usda_linear1,
usda_linear2,
usda_linear3,
usda_linear4,
usda_linear5))
BIC(usda_linear2)
AIC(usda_linear1,
usda_linear2,
usda_linear3,
usda_linear4,
usda_linear5)
BIC(usda_linear1,
usda_linear2,
usda_linear3,
usda_linear4,
usda_linear5)
